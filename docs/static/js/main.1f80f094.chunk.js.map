{"version":3,"sources":["components/AppTitle.jsx","store/constants/actionTypes.js","store/actions/index.js","components/AppForm.jsx","store/containers/AppFormContainer.js","components/TodoListItem.jsx","components/TodoList.jsx","store/containers/TodoListContainer.js","components/TodoCounter.jsx","store/selectors/index.js","store/containers/TodoCounterContainer.js","components/AppModal.jsx","store/containers/AppModalContainer.js","components/App.jsx","store/reducers/todoReducer.js","store/reducers/modalReducer.js","store/reducers/formReducer.js","store/reducers/index.js","store/index.js","index.js"],"names":["AppTitle","text","className","ADD_TODO","UPDATE_TODO","REMOVE_TODO","SHOW_MODAL","HIDE_MODAL","SET_TODO_COMPLETED_STATUS","UPDATE_TEXTAREA_VALUE","UPDATE_INPUT_VALUE","updateTodo","dispatch","getState","type","id","modalReducer","currentTodoId","description","textareaValue","AppForm","addTodo","changeInputValue","inputValue","Form","onSubmit","event","preventDefault","Control","onChange","e","target","value","placeholder","autoComplete","required","Button","variant","mapActionsToProps","formReducer","connect","state","TodoListItem","completed","showModal","removeTodo","setTodoCompletedStatus","defaultChecked","checked","onClick","TodoList","todos","map","todo","todoById","todoReducer","find","status","TodoCounter","counter","getQuantityOfActiveTodos","createSelector","filter","length","AppModal","isVisible","hideModal","changeTextareaValue","Modal","show","onHide","Header","closeButton","Title","Body","as","rows","Footer","App","Container","AppFormContainer","TodoListContainer","TodoCounterContainer","AppModalContainer","initialState","action","Date","now","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f80f094.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst AppTitle = ({ text }) => {\r\n  return (\r\n    <h1 className=\"text-center mt-5 mb-4\">{text}</h1>\r\n  );\r\n}\r\n\r\nexport default AppTitle;","export const ADD_TODO = 'todo/ADD_TODO';\r\nexport const UPDATE_TODO = 'todo/UPDATE_TODO';\r\nexport const REMOVE_TODO = 'todo/REMOVE_TODO';\r\nexport const SHOW_MODAL = 'modal/SHOW_MODAL';\r\nexport const HIDE_MODAL = 'modal/HIDE_MODAL';\r\nexport const SET_TODO_COMPLETED_STATUS = 'todo/SET_TODO_COMPLETED_STATUS'; \r\nexport const UPDATE_TEXTAREA_VALUE = 'modal/UPDATE_TEXTAREA_VALUE';\r\nexport const UPDATE_INPUT_VALUE = 'form/UPDATE_INPUT_VALUE';","import {\r\n  ADD_TODO, \r\n  UPDATE_TODO,\r\n  REMOVE_TODO,\r\n  SHOW_MODAL,\r\n  HIDE_MODAL,\r\n  SET_TODO_COMPLETED_STATUS,\r\n  UPDATE_TEXTAREA_VALUE,\r\n  UPDATE_INPUT_VALUE\r\n} from '../constants/actionTypes';\r\n\r\nexport const addTodo = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: ADD_TODO,\r\n      description: getState().formReducer.inputValue\r\n    });\r\n  }\r\n}\r\n\r\nexport const updateTodo = () => {\r\n  return (dispatch, getState) => {\r\n    dispatch({\r\n      type: UPDATE_TODO,\r\n      id: getState().modalReducer.currentTodoId,\r\n      description: getState().modalReducer.textareaValue\r\n    });\r\n  }\r\n}\r\n\r\nexport const removeTodo = (id) => {\r\n  return {\r\n    type: REMOVE_TODO,\r\n    id\r\n  }\r\n}\r\n\r\nexport const showModal = (id) => {\r\n  return (dispatch, getState) => {\r\n    const todos = getState().todoReducer.todos;\r\n    const todoById = todos.find(todo => todo.id === id);\r\n    dispatch({\r\n      type: SHOW_MODAL,\r\n      id: id,\r\n      description: todoById.description\r\n    });\r\n  }\r\n}\r\n\r\nexport const hideModal = () => {\r\n  return {\r\n    type: HIDE_MODAL\r\n  }\r\n}\r\n\r\nexport const setTodoCompletedStatus = (id, status) => {\r\n  return {\r\n    type: SET_TODO_COMPLETED_STATUS,\r\n    id,\r\n    status\r\n  }\r\n}\r\n\r\nexport const changeTextareaValue = (value) => {\r\n  return {\r\n    type: UPDATE_TEXTAREA_VALUE,\r\n    value\r\n  }\r\n}\r\n\r\nexport const changeInputValue = (value) => {\r\n  return {\r\n    type: UPDATE_INPUT_VALUE,\r\n    value\r\n  }\r\n}","import React from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst AppForm = ({ addTodo, changeInputValue, inputValue}) => {\r\n  function handleFormSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    addTodo();\r\n    changeInputValue('');\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleFormSubmit}>\r\n      <div className=\"mb-3\">\r\n        <Form.Control \r\n          onChange={(e) => changeInputValue(e.target.value)}\r\n          value={inputValue}\r\n          type=\"text\" \r\n          placeholder=\"Add todo\" \r\n          autoComplete=\"off\" \r\n          required \r\n        />\r\n      </div>\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Add new todo\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default AppForm;","import { connect } from 'react-redux';\r\nimport { addTodo, changeInputValue} from '../actions';\r\nimport AppForm from '../../components/AppForm';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    inputValue: state.formReducer.inputValue\r\n  }\r\n}\r\n\r\nconst mapActionsToProps = {addTodo, changeInputValue}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(AppForm);","import React from 'react';\r\n\r\nconst TodoListItem = ({ id, completed, description, showModal, removeTodo, setTodoCompletedStatus }) => {\r\n  return (\r\n    <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\r\n      <div className=\"form-check d-flex align-items-center\">\r\n        <input\r\n          type=\"checkbox\" \r\n          className=\"form-check-input mt-0\"   \r\n          defaultChecked={completed}\r\n          onChange={(e) => setTodoCompletedStatus(id, e.target.checked)}\r\n        />\r\n        <label className=\"form-label mb-0\">\r\n          {description}\r\n        </label>\r\n      </div>\r\n      <div className=\"d-flex justify-content-between py-3\">\r\n        <button type=\"button\" className=\"btn btn-warning mx-3\" onClick={() => showModal(id)}>Update</button>\r\n        <button type=\"button\" className=\"btn btn-danger\" onClick={() => removeTodo(id)}>Delete</button>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default TodoListItem;","import React from 'react';\r\nimport TodoListItem from './TodoListItem';\r\n\r\nconst TodoList = ({ todos, updateTodo, removeTodo, showModal, setTodoCompletedStatus }) => {\r\n  return (\r\n    <ul className=\"list-group mt-4\">\r\n      {\r\n        todos.map(todo => (\r\n          <TodoListItem \r\n            key={todo.id} \r\n            id={todo.id}\r\n            completed={todo.completed}\r\n            description={todo.description}\r\n            updateTodo={updateTodo} \r\n            removeTodo={removeTodo}\r\n            showModal={showModal}\r\n            setTodoCompletedStatus={setTodoCompletedStatus}\r\n          />\r\n        ))\r\n      }\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import { connect } from 'react-redux';\r\nimport { updateTodo, removeTodo, showModal, setTodoCompletedStatus } from '../actions';\r\nimport TodoList from '../../components/TodoList';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state.todoReducer.todos\r\n  }\r\n} \r\n\r\nconst mapActionsToProps = {updateTodo, removeTodo, showModal, setTodoCompletedStatus}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(TodoList);","import React from 'react';\r\n\r\nconst TodoCounter = ({ counter }) => {\r\n  return (\r\n    <div className=\"my-3 px-2\">\r\n      <p>{counter} items left</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoCounter;","import { createSelector } from 'reselect';\r\n\r\nconst getTodos = (state) => state.todoReducer.todos;\r\n\r\nexport const getQuantityOfActiveTodos = createSelector(\r\n  [getTodos],\r\n  (todos) => {\r\n    return todos.filter(todo => !todo.completed).length;\r\n  }\r\n);\r\n","import { connect } from 'react-redux';\r\nimport TodoCounter from '../../components/TodoCounter';\r\nimport { getQuantityOfActiveTodos } from '../selectors';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    counter: getQuantityOfActiveTodos(state)\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(TodoCounter);","import React from 'react';\r\nimport { Button, Modal, Form } from 'react-bootstrap';\r\n\r\nconst AppModal = ({ isVisible, hideModal, textareaValue, changeTextareaValue, updateTodo }) => {\r\n  function handleConfirmBtnClick() {\r\n    updateTodo();\r\n    hideModal();\r\n  }\r\n\r\n  return (\r\n    <Modal show={isVisible} onHide={hideModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Update todo</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form.Control \r\n          as=\"textarea\" \r\n          rows={3} \r\n          value={textareaValue} \r\n          onChange={(e) => changeTextareaValue(e.target.value)} />\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"primary\" onClick={handleConfirmBtnClick}>\r\n          Confirm update\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AppModal;","import { connect } from 'react-redux';\r\nimport AppModal from '../../components/AppModal';\r\nimport { hideModal, changeTextareaValue, updateTodo } from '../actions';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isVisible: state.modalReducer.isVisible,\r\n    textareaValue: state.modalReducer.textareaValue\r\n  }\r\n}\r\n\r\nconst mapActionsToProps = {hideModal, changeTextareaValue, updateTodo}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(AppModal);","import React from 'react';\nimport AppTitle from './AppTitle';\nimport AppFormContainer from '../store/containers/AppFormContainer';\nimport TodoListContainer from '../store/containers/TodoListContainer';\nimport TodoCounterContainer from '../store/containers/TodoCounterContainer';\nimport AppModalContainer from '../store/containers/AppModalContainer';\nimport { Container } from 'react-bootstrap'\n\nconst App = () => {\n  return (\n    <Container>\n      <AppTitle text=\"React - Redux todo app\" />\n      <AppFormContainer />\n      <TodoListContainer />\n      <TodoCounterContainer />\n      <AppModalContainer />\n    </Container>\n  );\n}\n\nexport default App;\n","import { \r\n  ADD_TODO, \r\n  UPDATE_TODO,\r\n  REMOVE_TODO,\r\n  SET_TODO_COMPLETED_STATUS\r\n} from '../constants/actionTypes';\r\n\r\nconst initialState = {\r\n  todos: []\r\n}\r\n\r\nconst todoReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return {\r\n        todos: [...state.todos, {id: Date.now(), description: action.description, completed: false}]\r\n      }\r\n    case UPDATE_TODO:\r\n      return {\r\n        todos: [\r\n          ...state.todos.map(todo => todo.id === action.id ? {...todo, description: action.description} : todo)\r\n        ]\r\n      }\r\n    case REMOVE_TODO:\r\n      return {\r\n        todos: [...state.todos.filter(todo => todo.id !== action.id)]\r\n      }\r\n    case SET_TODO_COMPLETED_STATUS:\r\n      return {\r\n        todos: [\r\n          ...state.todos.map(todo => todo.id === action.id ? {...todo, completed: action.status} : todo)\r\n        ]\r\n      }\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default todoReducer;","import { SHOW_MODAL, HIDE_MODAL, UPDATE_TEXTAREA_VALUE } from '../constants/actionTypes';\r\n\r\nconst initialState = {\r\n  isVisible: false,\r\n  textareaValue: '',\r\n  currentTodoId: null\r\n}\r\n\r\nconst modalReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SHOW_MODAL:\r\n      return {\r\n        currentTodoId: action.id,\r\n        textareaValue: action.description,\r\n        isVisible: true\r\n      }\r\n    case HIDE_MODAL:\r\n      return {\r\n        ...state,\r\n        isVisible: false\r\n      }\r\n    case UPDATE_TEXTAREA_VALUE:\r\n      return {\r\n        ...state,\r\n        textareaValue: action.value\r\n      }\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default modalReducer;","import { UPDATE_INPUT_VALUE } from '../constants/actionTypes';\r\n\r\nconst initialState = {\r\n  inputValue: ''\r\n}\r\n\r\nconst formReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_INPUT_VALUE:\r\n      return {\r\n        inputValue: action.value\r\n      }\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default formReducer;","import { combineReducers } from 'redux';\r\nimport todoReducer from './todoReducer';\r\nimport modalReducer from './modalReducer';\r\nimport formReducer from './formReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  todoReducer,\r\n  modalReducer,\r\n  formReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { render } from 'react-dom';\nimport App from './components/App';\nimport store from './store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}